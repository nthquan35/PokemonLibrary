{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nfunction useFetch(uri) {\n  const [data, setData] = useState();\n  const [notFound, setNotFound] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async () => {\n      setNotFound(true);\n\n      try {\n        const res = await fetch(uri);\n        const json = await res.json();\n        setData(json);\n        setNotFound(false);\n      } catch (error) {\n        if (error.name !== 'AbortError') {\n          setError(error);\n        }\n      }\n    };\n\n    if (uri) fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [uri]); //   if (!uri) return;\n  //   fetch(uri)\n  //   .then(data => data.json())\n  //   .then(setData)\n  //   .then(() => setNotFound(false))\n  //   .catch(setError)\n  // }, [uri]);\n  // console.log(data);\n\n  return {\n    notFound,\n    data,\n    error\n  };\n}\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/shadyd0ta/Documents/PokemonLibrary/src/components/useFetch.js"],"names":["useState","useEffect","useFetch","uri","data","setData","notFound","setNotFound","error","setError","controller","AbortController","fetchData","res","fetch","json","name","abort"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5BL,MAAAA,WAAW,CAAC,IAAD,CAAX;;AACA,UAAI;AACF,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,CAAvB;AACA,cAAMY,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAV,QAAAA,OAAO,CAACU,IAAD,CAAP;AACAR,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD,OALD,CAKE,OAAOC,KAAP,EAAa;AACb,YAAIA,KAAK,CAACQ,IAAN,KAAe,YAAnB,EAAgC;AAC9BP,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF;AACF,KAZD;;AAcA,QAAIL,GAAJ,EACES,SAAS;AACX,WAAO,MAAM;AACXF,MAAAA,UAAU,CAACO,KAAX;AACD,KAFD;AAGD,GArBQ,EAqBN,CAACd,GAAD,CArBM,CAAT,CALqB,CA4BrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO;AAACG,IAAAA,QAAD;AAAWF,IAAAA,IAAX;AAAiBI,IAAAA;AAAjB,GAAP;AACD;;AAED,eAAeN,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nfunction useFetch(uri) {\n  const [data, setData] = useState();\n  const [notFound, setNotFound] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchData = async () => {\n      setNotFound(true);\n      try {\n        const res = await fetch(uri);\n        const json = await res.json();\n        setData(json);\n        setNotFound(false);\n      } catch (error){\n        if (error.name !== 'AbortError'){\n          setError(error);\n        }\n      }\n    };\n\n    if (uri)\n      fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [uri]);\n\n  //   if (!uri) return;\n  //   fetch(uri)\n  //   .then(data => data.json())\n  //   .then(setData)\n  //   .then(() => setNotFound(false))\n  //   .catch(setError)\n  // }, [uri]);\n  // console.log(data);\n  return {notFound, data, error};\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}