{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nfunction useFetch(uri) {\n  const [data, setData] = useState();\n  const [notFound, setNotFound] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    if (!uri) return;\n    fetch(uri).then(data => data.json()).then(setData).then(() => {\n      setNotFound(false);\n      setError('');\n    }).catch(e => {\n      setError(e);\n      setNotFound(true);\n    });\n  }, [uri]);\n  return {\n    notFound,\n    data,\n    error\n  };\n}\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/shadyd0ta/Documents/PokemonLibrary/src/components/useFetch.js"],"names":["useState","useEffect","useFetch","uri","data","setData","notFound","setNotFound","error","setError","fetch","then","json","catch","e"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAGA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,GAAL,EAAU;AACVO,IAAAA,KAAK,CAACP,GAAD,CAAL,CACCQ,IADD,CACMP,IAAI,IAAIA,IAAI,CAACQ,IAAL,EADd,EAECD,IAFD,CAEMN,OAFN,EAGCM,IAHD,CAGM,MAAM;AACVJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAND,EAOCI,KAPD,CAOQC,CAAD,IAAO;AACZL,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACAP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAVD;AAWD,GAbQ,EAaN,CAACJ,GAAD,CAbM,CAAT;AAcA,SAAO;AAACG,IAAAA,QAAD;AAAWF,IAAAA,IAAX;AAAiBI,IAAAA;AAAjB,GAAP;AACD;;AAED,eAAeN,QAAf","sourcesContent":["import {useState, useEffect} from 'react';\n\n\nfunction useFetch(uri) {\n  const [data, setData] = useState();\n  const [notFound, setNotFound] = useState(true);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    if (!uri) return;\n    fetch(uri)\n    .then(data => data.json())\n    .then(setData)\n    .then(() => {\n      setNotFound(false)\n      setError('')\n    })\n    .catch((e) => {\n      setError(e)\n      setNotFound(true)\n    })\n  }, [uri]);\n  return {notFound, data, error};\n}\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}